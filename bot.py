import asyncio
import json
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart, CommandObject
from config import BOT_TOKEN
import database as db

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π
with open("tasks.json", "r", encoding="utf-8") as f:
    TASKS = json.load(f)

user_active_task = {}  # –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π

@dp.message(CommandStart())
async def start_handler(message: types.Message, command: CommandObject):
    await db.add_user(message.from_user.id, message.from_user.username or "")
    task_arg = command.args  # –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ—Å–ª–µ /start=

    if task_arg and task_arg in TASKS:
        task = TASKS[task_arg]
        user_active_task[message.from_user.id] = task_arg
        await message.answer(
            f"üéØ <b>{task['title']}</b>\n\n{task['description']}",
            parse_mode="HTML"
        )
    else:
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∫–≤–µ—Å—Ç –ù–ì–ü–£.\n"
            "–°–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥—ã –≤ –ª–æ–∫–∞—Ü–∏—è—Ö, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è üó∫Ô∏è"
        )


@dp.message(F.photo)
async def photo_handler(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_active_task:
        await message.answer("üìç –°–Ω–∞—á–∞–ª–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥ —Å –∑–∞–¥–∞–Ω–∏–µ–º!")
        return

    task_id = user_active_task[user_id]
    done = await db.check_task_done(user_id, task_id)
    if done:
        await message.answer("‚úÖ –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ò—â–∏ —Å–ª–µ–¥—É—é—â–µ–µ!")
        return

    await db.mark_task_done(user_id, task_id)
    del user_active_task[user_id]
    await message.answer("üéâ –û—Ç–ª–∏—á–Ω–æ! –ó–∞–¥–∞–Ω–∏–µ –∑–∞—Å—á–∏—Ç–∞–Ω–æ.\n–ò—â–∏ —Å–ª–µ–¥—É—é—â–∏–π QR-–∫–æ–¥ üîç")

async def main():
    await db.init_db()
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
